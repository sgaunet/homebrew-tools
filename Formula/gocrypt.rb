# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Gocrypt < Formula
  desc ""
  homepage "https://github.com/sgaunet/homebrew-tools"
  version "1.4.0"

  on_macos do
    if Hardware::CPU.arm?
      url "https://github.com/sgaunet/gocrypt/releases/download/v1.4.0/gocrypt_1.4.0_darwin_arm64"
      sha256 "80872f1295a9dd44a7738c7736b595a78679a7d5b721796846cdab08f4320c98"

      def install
        bin.install "gocrypt"
        # bash_completion.install "completions/foo.bash" => "foo"
        # ...
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/sgaunet/gocrypt/releases/download/v1.4.0/gocrypt_1.4.0_darwin_amd64"
      sha256 "60bbd2eccee7e29a6b899bdb3bb08cadae1c3d4658d675b683305258a9cafac1"

      def install
        bin.install "gocrypt"
        # bash_completion.install "completions/foo.bash" => "foo"
        # ...
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      url "https://github.com/sgaunet/gocrypt/releases/download/v1.4.0/gocrypt_1.4.0_linux_amd64"
      sha256 "108b61e56e4b3e82d563ecbd2c14e110c5a159ea2a95ff39bb6a1a8d364650c6"

      def install
        bin.install "gocrypt"
        # bash_completion.install "completions/foo.bash" => "foo"
        # ...
      end
    end
    if Hardware::CPU.arm? && !Hardware::CPU.is_64_bit?
      url "https://github.com/sgaunet/gocrypt/releases/download/v1.4.0/gocrypt_1.4.0_linux_armv6"
      sha256 "79bf9938d21c67e937620b1b12c6bd57fe9157308dac15233caaed7c1a9ce79a"

      def install
        bin.install "gocrypt"
        # bash_completion.install "completions/foo.bash" => "foo"
        # ...
      end
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/sgaunet/gocrypt/releases/download/v1.4.0/gocrypt_1.4.0_linux_arm64"
      sha256 "eca60d13c08d5cfd3fc2a21beca54f756eb6a852dd46023748986c93a0f9879f"

      def install
        bin.install "gocrypt"
        # bash_completion.install "completions/foo.bash" => "foo"
        # ...
      end
    end
  end
end
