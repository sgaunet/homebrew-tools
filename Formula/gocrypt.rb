# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Gocrypt < Formula
  desc ""
  homepage "https://github.com/sgaunet/homebrew-tools"
  version "1.2.0"

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/sgaunet/gocrypt/releases/download/v1.2.0/gocrypt_1.2.0_darwin_amd64"
      sha256 "a34ada3357efd82b9e31a79417a68885269013bbd469ee79f6c7f2dd8ba87ed2"

      def install
        bin.install "gocrypt"
        # bash_completion.install "completions/foo.bash" => "foo"
        # ...
      end
    end
    if Hardware::CPU.arm?
      url "https://github.com/sgaunet/gocrypt/releases/download/v1.2.0/gocrypt_1.2.0_darwin_arm64"
      sha256 "0bc7089b05731170b47ab49a84b9a9a860561baede865cff4d655415dd0cb3b7"

      def install
        bin.install "gocrypt"
        # bash_completion.install "completions/foo.bash" => "foo"
        # ...
      end
    end
  end

  on_linux do
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/sgaunet/gocrypt/releases/download/v1.2.0/gocrypt_1.2.0_linux_arm64"
      sha256 "7ea86922196a45184aa3478e8677233e55f2cecca973fa5e9a200ee093bfd12d"

      def install
        bin.install "gocrypt"
        # bash_completion.install "completions/foo.bash" => "foo"
        # ...
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/sgaunet/gocrypt/releases/download/v1.2.0/gocrypt_1.2.0_linux_amd64"
      sha256 "5aceb02b71fa3a119c64e1a25e4e4c7d73ae86524d8e1da689f48884b5548468"

      def install
        bin.install "gocrypt"
        # bash_completion.install "completions/foo.bash" => "foo"
        # ...
      end
    end
    if Hardware::CPU.arm? && !Hardware::CPU.is_64_bit?
      url "https://github.com/sgaunet/gocrypt/releases/download/v1.2.0/gocrypt_1.2.0_linux_armv6"
      sha256 "03e832eb3424947c3439534032eb76a8b2abe3bc0aa52f04eb239841e587a830"

      def install
        bin.install "gocrypt"
        # bash_completion.install "completions/foo.bash" => "foo"
        # ...
      end
    end
  end
end
