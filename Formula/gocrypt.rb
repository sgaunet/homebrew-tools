# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Gocrypt < Formula
  desc ""
  homepage "https://github.com/sgaunet/homebrew-tools"
  version "1.0.0"

  on_macos do
    if Hardware::CPU.arm?
      url "https://github.com/sgaunet/gocrypt/releases/download/v1.0.0/gocrypt_1.0.0_darwin_arm64"
      sha256 "00b9b546580ae32a7dd259453e65bdd08508c66ac231b98fe3643b9278152477"

      def install
        bin.install "gocrypt"
        # bash_completion.install "completions/foo.bash" => "foo"
        # ...
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/sgaunet/gocrypt/releases/download/v1.0.0/gocrypt_1.0.0_darwin_amd64"
      sha256 "50644d6ebb59e7f1c31062cc3ae71f7202fa16aa66d8a7a291a87ddec3cde4ec"

      def install
        bin.install "gocrypt"
        # bash_completion.install "completions/foo.bash" => "foo"
        # ...
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      url "https://github.com/sgaunet/gocrypt/releases/download/v1.0.0/gocrypt_1.0.0_linux_amd64"
      sha256 "3266835d55f45e1142331e72e5ebe3e4ed28efb6b566590a97004497aa1a5602"

      def install
        bin.install "gocrypt"
        # bash_completion.install "completions/foo.bash" => "foo"
        # ...
      end
    end
    if Hardware::CPU.arm? && !Hardware::CPU.is_64_bit?
      url "https://github.com/sgaunet/gocrypt/releases/download/v1.0.0/gocrypt_1.0.0_linux_armv6"
      sha256 "3c36ea7165dc583047628653a93613291b243317e537a6e0d17170f5d27e9964"

      def install
        bin.install "gocrypt"
        # bash_completion.install "completions/foo.bash" => "foo"
        # ...
      end
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/sgaunet/gocrypt/releases/download/v1.0.0/gocrypt_1.0.0_linux_arm64"
      sha256 "89c226af5e519b6ebf0e72c056e1e7a4bdd51183423a2b09a9ee9fedcea269ba"

      def install
        bin.install "gocrypt"
        # bash_completion.install "completions/foo.bash" => "foo"
        # ...
      end
    end
  end
end
