# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Gocrypt < Formula
  desc ""
  homepage "https://github.com/sgaunet/homebrew-tools"
  version "1.1.0"

  on_macos do
    if Hardware::CPU.arm?
      url "https://github.com/sgaunet/gocrypt/releases/download/v1.1.0/gocrypt_1.1.0_darwin_arm64"
      sha256 "b2e86bc46430abb7188a288ca0e9cd95eeae545d53d9785608709c44a93430b0"

      def install
        bin.install "gocrypt"
        # bash_completion.install "completions/foo.bash" => "foo"
        # ...
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/sgaunet/gocrypt/releases/download/v1.1.0/gocrypt_1.1.0_darwin_amd64"
      sha256 "5eccf1e0d91d8f5a22732869e5e6bf5b752c89ce618a6603e9f24f1f3b34ffe7"

      def install
        bin.install "gocrypt"
        # bash_completion.install "completions/foo.bash" => "foo"
        # ...
      end
    end
  end

  on_linux do
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/sgaunet/gocrypt/releases/download/v1.1.0/gocrypt_1.1.0_linux_arm64"
      sha256 "f85a4eed359420844075c7b3420f60534fd48a386277a928394a1bdd0eed6405"

      def install
        bin.install "gocrypt"
        # bash_completion.install "completions/foo.bash" => "foo"
        # ...
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/sgaunet/gocrypt/releases/download/v1.1.0/gocrypt_1.1.0_linux_amd64"
      sha256 "07f79aa5726e9001f7eb04507997cf25909fc1aaddfaf07c45b77d003a2df0b2"

      def install
        bin.install "gocrypt"
        # bash_completion.install "completions/foo.bash" => "foo"
        # ...
      end
    end
    if Hardware::CPU.arm? && !Hardware::CPU.is_64_bit?
      url "https://github.com/sgaunet/gocrypt/releases/download/v1.1.0/gocrypt_1.1.0_linux_armv6"
      sha256 "e1e5a0bdc84d129de0d29880c2977d11724fb24778195c4e9abf6f3b2f8fa2d5"

      def install
        bin.install "gocrypt"
        # bash_completion.install "completions/foo.bash" => "foo"
        # ...
      end
    end
  end
end
